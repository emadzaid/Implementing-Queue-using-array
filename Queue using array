#include <iostream>
#include <cstdlib>

using namespace std;

struct queue
{
    int rear;
    int front;
    int size;
    int * arr;
};

bool isFull(struct queue * q)
{
    return q->rear == q->size-1;
}

bool isEmpty(struct queue * q)
{
    return  q->front == q->rear;
}
void enqueue(struct queue * q, int data)
{
    if(isFull(q))
    {
        cout << "Queue Overflow...\n";
    }
    else
    {
        q->rear++;
        q->arr[q->rear] = data;
    }
}

void displayQueue(struct queue * q)
{
    int i = q->front;
    while(i != q->rear)
    {
        i++;
        cout << q->arr[i] << endl;
        
    }
}
int dequeue(struct queue * q)
{
    if(isEmpty(q))
    {
        cout << "Queue underflow...\n";
        return -1;
    }
    else
    {
        q->front++;
        int n = q->arr[q->front];
        return n;
    }
}

int main()
{
  
    struct queue * q = (struct queue*)malloc(sizeof(queue));
    q->front = q->rear = -1;
    q->size = 10;
    q->arr = (int*)malloc(q->size * sizeof(int));
    
    enqueue(q, 10);
    enqueue(q, 19);
    enqueue(q, 12);
    enqueue(q, 17);
    enqueue(q, 20);
    enqueue(q, 14);
    
    dequeue(q);
    dequeue(q);
    dequeue(q);
    dequeue(q);
    dequeue(q);
    dequeue(q);
    
    enqueue(q, 12);
    enqueue(q, 17);
    enqueue(q, 20);
    enqueue(q, 14);
    enqueue(q, 14);
    
    displayQueue(q);
    cout <<  endl;
    return 0;
}
    
